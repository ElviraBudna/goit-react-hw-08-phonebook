{"version":3,"file":"static/js/728.c9b95d5e.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","pages/Contacts.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 14px;\n  margin-bottom: 40px;\n\n  color: #2f4f4f;\n`;\n\nexport const TitleForm = styled.h2`\n  font-size: 24px;\n`;\n\nexport const InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n`;\n\nexport const ButtonForm = styled.button`\n  border-radius: 4px;\n  border: 0.5px solid transparent;\n  display: block;\n  min-width: 160px;\n\n  color: #2f4f4f;\n  background-color: #ffefd5;\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(30 / 16);\n  letter-spacing: 0.06em;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  padding: 10px 24px;\n\n  &:hover {\n    background-color: #ffdab9;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  font-size: 16px;\n  line-height: calc(20 / 16);\n`;\n\nexport const Input = styled.input`\n  padding: 12px 12px 12px 12px;\n\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: none;\n\n  &:focus {\n    border-color: #ffdab9;\n  }\n`;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport {\n  Form,\n  TitleForm,\n  InputBox,\n  ButtonForm,\n  Input,\n  Label,\n} from './ContactForm.styled';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const checkName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (checkName) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n\n    const data = { name, number };\n    dispatch(addContact(data));\n    toast.success(`Contact ${name} added successfully`);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <TitleForm>Phonebook</TitleForm>\n      <InputBox>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputBox>\n      <InputBox>\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputBox>\n      <ButtonForm type=\"submit\">Add contact</ButtonForm>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const AppContainer = styled.div`\n  padding: 32px 20px;\n  margin: 0 auto;\n`;\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  color: #2f4f4f;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  font-size: 16px;\n  line-height: calc(20 / 16);\n`;\n\nexport const Input = styled.input`\n  padding: 12px 12px 12px 12px;\n\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: none;\n\n  &:focus {\n    border-color: #ffdab9;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterContainer, Label, Input } from './Filter.styled';\nimport { filterChange } from 'redux/filterSlice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  return (\n    <FilterContainer>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name of contact\"\n        onChange={e => {\n          dispatch(filterChange(e.target.value.toLowerCase()));\n        }}\n      />\n    </FilterContainer>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 4px;\n\n  font-size: 18px;\n`;\n\nexport const DeleteButton = styled.button`\n  border-radius: 4px;\n  border: 0.5px solid transparent;\n  display: block;\n  min-width: 60px;\n  margin: 0 auto;\n\n  color: #2f4f4f;\n  background-color: #ffefd5;\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 12px;\n  letter-spacing: 0.06em;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  padding: 6px 12px;\n\n  &:hover {\n    background-color: #ffdab9;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { DeleteButton, Container, Text } from './ContactItem.styled';\nimport { deleteContact } from 'redux/operations';\n\nexport default function ContactItem({ contact }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = contactId =>\n    dispatch(deleteContact(contactId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        // handle result here\n        toast.success(`Contact delete successfully`);\n      })\n      .catch(rejectedValueOrSerializedError => {\n        // handle error here\n        toast.error(`Error`);\n      });\n\n  return (\n    <Container>\n      {contact.map(({ id, name, number }) => (\n        <li key={id}>\n          <Text>\n            {name}: <span>{number}</span>\n          </Text>\n\n          <DeleteButton type=\"button\" onClick={() => handleDelete(id)}>\n            Delete\n          </DeleteButton>\n        </li>\n      ))}\n    </Container>\n  );\n}\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n","import ContactItem from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { getIsLoading, getError, getVisibleContacts } from 'redux/selectors';\n\nexport default function ContactList() {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <List>\n      {isLoading && !error && <b>Loading...</b>}\n      <ContactItem contact={visibleContacts} />\n    </List>\n  );\n}\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { AppContainer, ContactsContainer, Title } from './Contacts.styled';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Phonebook = () => {\n  return (\n    <AppContainer>\n      <ContactForm />\n      <ContactsContainer>\n        <Title>Contacts</Title>\n        <Filter />\n        <ContactList />\n      </ContactsContainer>\n    </AppContainer>\n  );\n};\n\nexport default Phonebook;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getVisibleContacts","filter","contact","toLowerCase","includes","Form","styled","TitleForm","InputBox","ButtonForm","Label","Input","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","e","currentTarget","reset","onSubmit","preventDefault","toast","data","addContact","htmlFor","onChange","type","placeholder","pattern","title","required","AppContainer","ContactsContainer","Title","FilterContainer","Filter","filterChange","target","Container","Text","DeleteButton","ContactItem","id","onClick","contactId","deleteContact","unwrap","then","originalPromiseResult","catch","rejectedValueOrSerializedError","List","ContactList","visibleContacts","useEffect","fetchContacts"],"sourceRoot":""}